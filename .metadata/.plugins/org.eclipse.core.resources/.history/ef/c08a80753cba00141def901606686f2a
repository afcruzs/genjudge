package unal.edu.gpj
import org.apache.shiro.SecurityUtils

class ContestController {

	def loginService
	def index() {
		render( view: "index", model : [ contests : Contest.list() ] )
	}

	def seeProblems(){
		def submissions = Submission.findAllByUser(loginService.getCurrentUser())
		def contest = Contest.get(Long.parseLong(params.contestId))
		
		def submittedProblems = contest.submission.intersect(submissions)
		def alreadySolvedProblems = submittedProblems.findAll{ sub -> sub.correct == true }
		
		def waitingTestCases = TestCaseDownload.findAllByUser(loginService.getCurrentUser()).findAll{ 
				tc -> 
					tc.downloadDate.compareTo(new Date()) < 0 &&
					tc.dueDate.compareTo(new Date()) > 0  
			}*.getTestCase()
		
		def waitingProblems = []
		def problems = Problem.list()
		
		for(TestCase tc : waitingTestCases)
			waitingProblems.addAll( problems.find{ problem -> problem.testCases.contains(tc) }  )
			
		def temp = (waitingProblems + alreadySolvedProblems).intersect(problems)
		
		def contestProblems = contest.getProblems()
		
		for( Problem p : temp )
			contestProblems.remove(temp)
		
		
		
		render( 
			view: "seeProblems", 
			model : [ 
				user : loginService.getCurrentUser(), 
				contest : contest,
				alreadySolvedProblems: alreadySolvedProblems,
				waitingProblems : waitingProblems,
				toBeDownloadedProblems : contestProblems
			] )
	}
	
	def downloadInput(){
		Problem problem = Problem.get(1)
		File file
		for(TestCase tc : problem.testCases){
			file.append(tc.inputFile)	
		}
		
		if (file.exists()){
			response.setContentType("application/text") // or or image/JPEG or text/xml or whatever type the file is
			response.setHeader("Content-disposition", "attachment;filename=\"${file.name}\"")
			response.outputStream << file.bytes
		}
		
		render "Never give up"
		
	}
}
